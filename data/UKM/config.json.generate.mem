cat << CTAG
{
    name:MEMORY,
		elements:[
CTAG

ZRAM0=/sys/devices/virtual/block/zram0
if [ -f "/sys/devices/virtual/block/zram0/disksize" ]; then
	ZRAM_MB=`$BB cat /sys/devices/virtual/block/zram0/disksize`
	ZRAM_MB=$((ZRAM_MB / 1024 / 1024));
	cat << __CTAG
			{ SPane:{
				title:"Z-RAM",
				description:"Attempts to increase performance by avoiding paging on physical storage, instead using a compressed virtual device in RAM. Paging takes place in RAM until it is necessary to use the swap space on physical storage."
			}},
				{ SLiveLabel: {
					title: "ZRam0",
					refresh: 1000,
					action: "zraminfo $ZRAM0"
				}},
				{ SSeekBar:{
					unit:" MB",
					step:1,
					min:0,
					max:1024, 
					default:$ZRAM_MB,
					action:"zram /sys/devices/virtual/block/zram0/disksize"
				}},
__CTAG
fi
cat << CTAG
			`if [ -f "/sys/block/zram0/comp_algorithm" ]; then
			CA=\`$BB echo $($UKM/actions/bracket-option /sys/block/zram0/comp_algorithm)\`;
				$BB echo '{ SOptionList:{
					title:"Compression Algorithm",
					description:"Applying a different option will reset Z-RAM. LZ4 algorithm tends to have a faster decompression. More info: <a href='https://code.google.com/p/lz4/'>HERE</a>.",
					default:'$CA',
					action:"bracket-option /sys/block/zram0/comp_algorithm",
					values:['
						for COMPALG in \`$BB cat /sys/block/zram0/comp_algorithm | $BB sed -e "s/\]//;s/\[//"\`; do
							echo "\"$COMPALG\",";
						done;
					$BB echo '],
					notify:[
						{
							on:APPLY,
							do:[ RESET, REFRESH, APPLY ],
							to:"zram /sys/devices/virtual/block/zram0/disksize"
						}
					]
				}},'
			fi`
			`if [ -f "/sys/block/zram0/max_comp_streams" ]; then
			MCS=\`$BB cat /sys/block/zram0/max_comp_streams\`;
				$BB echo '{ SSeekBar:{
					title:"Max Compression Streams",
					description:"Applying a different option will reset Z-RAM. Can have N write operations (depending on size of streams list) executing in parallel.",
					min:1,
					max:5,
					step:1,
					default:'$MCS',
					action:"generic /sys/block/zram0/max_comp_streams",
					notify:[
						{
							on:APPLY,
							do:[ RESET, REFRESH, APPLY ],
							to:"zram /sys/devices/virtual/block/zram0/disksize"
						}
					]
				}},'
			fi`
			`if [ -f "/sys/kernel/mm/ksm/run" ]; then
			KSM=\`$BB cat /sys/kernel/mm/ksm/run\`
			PTS=\`$BB cat /sys/kernel/mm/ksm/pages_to_scan\`
			SLEEP=\`$BB cat /sys/kernel/mm/ksm/sleep_millisecs\`
				$BB echo '{ SPane:{
					title:"Kernel Samepage Merging"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"KSM lets the hypervisor system share identical memory pages amongst different processes or virtualized guests. This increases CPU consumption but improves memory.",
						default:'$KSM',
						action:"generic /sys/kernel/mm/ksm/run"
					}},'
					if [ -f "/sys/kernel/mm/ksm/deferred_timer" ]; then
					DT=\`$BB cat /sys/kernel/mm/ksm/deferred_timer\`
						$BB echo '{ SCheckBox:{
							label:"Deferred Timer",
							description:"If enabled, KSM thread will not wakeup CPU to carryout activities thus gaining battery while compromising slightly on memory that could have been saved.",
							default:'$DT',
							action:"generic /sys/kernel/mm/ksm/deferred_timer"
						}},'
					fi
					$BB echo '{ SSeekBar:{
						title:"Pages To Scan",
						unit:" pages",
						step:4,
						min:4,
						max:1024,
						default:'$PTS',
						action:"generic /sys/kernel/mm/ksm/pages_to_scan"
					}},
					{ SSeekBar:{
						title:"Scan Delay Interval",
						unit:" ms",
						step:50,
						min:50,
						max:3000,
						default:'$SLEEP',
						action:"generic /sys/kernel/mm/ksm/sleep_millisecs"
					}},'
			fi`
			`if [ -f "/sys/kernel/mm/uksm/run" ]; then
			UKSM=\`$BB cat /sys/kernel/mm/uksm/run\`
			SLEEP=\`$BB cat /sys/kernel/mm/uksm/sleep_millisecs\`
			UKSMGOV=\`$BB echo $($UKM/actions/bracket-option /sys/kernel/mm/uksm/cpu_governor)\`
			MAXCPU=\`$BB cat /sys/kernel/mm/uksm/max_cpu_percentage\`
				$BB echo '{ SPane:{
					title:"Ultra Kernel Samepage Merging"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"UKSM lets the hypervisor system share identical memory pages amongst different processes or virtualized guests. UKSM has a better algorithm than KSM.",
						default:'$UKSM',
						action:"generic /sys/kernel/mm/uksm/run"
					}},
					{ SSeekBar:{
						title:"Sleep",
						description:"How long will the daemon sleep before it wakes up and starts scanning memory pages.",
						unit:" ms",
						step:100,
						min:0,
						max:3000,
						default:'$SLEEP',
						action:"generic /sys/kernel/mm/uksm/sleep_millisecs"
					}},
					{ SOptionList:{
						title:"CPU Governor",
						description:"Controls how aggressively the daemon uses CPU power. This sets a preset for the maximum CPU consumption below.",
						default:'$UKSMGOV',
						action:"bracket-option /sys/kernel/mm/uksm/cpu_governor",
						values:['
							for UGOV in \`$BB cat /sys/kernel/mm/uksm/cpu_governor | $BB sed -e "s/\]//;s/\[//"\`; do
								$BB echo "\"$UGOV\",";
							done;
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
							},
						]
					}},
					{ SSeekBar:{
						title:"Max CPU Consumption",
						description:"The maximum CPU consumption the daemon will use while scanning. Higher = better scanning (more battery drain).",
						unit:"%",
						step:1,
						min:10,
						max:99,
						default:'$MAXCPU',
						action:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
					}},'
			fi`
			{ SPane:{
				title:"Virtual Memory",
				description:"Tune the operation of the VM subsystem of the Linux kernel and the writeout of dirty data to disk. Swappiness also affects Z-RAM operation on kernels which support swaps."
			}},
				{ SSeekBar:{
					title:"Swappiness",
					description:"Controls the tendency of the kernel to move processes out of physical memory and onto the swap disk. Because disks are much slower than RAM, this can lead to slower response times for system and applications if processes are too aggressively moved out of memory.",
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/swappiness`,
					action:"generic /proc/sys/vm/swappiness"
				}},
CTAG

MEMCG="/sys/fs/cgroup/memory/"
if [ -f "$MEMCG/tasks" ]; then
	cat << __CTAG
				{ SSeekBar:{
						title:"Background swappiness",
						description:"Swappiness for backgroud processes selected by Android as low priority",
					unit:"%",
					step:1,
					min:0,
					max:100,
					action:"generic $MEMCG/sw/memory.swappiness",
					}},
__CTAG
fi

cat << CTAG
				{ SSeekBar:{
					title:"Dirty Background Ratio",
					description:"Contains, as a % of total system memory, the number of pages at which the pdflush background writeback daemon will start writing out dirty data.",
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/dirty_background_ratio`,
					action:"generic /proc/sys/vm/dirty_background_ratio"
				}},
				{ SSeekBar:{
					title:"Dirty Ratio",
					description:"Contains, as a % of total system memory, the number of pages at which a process which is generating disk writes will itself start writing out dirty data. Lower the amount of unwritten write cache to reduce lags when a huge write is required.",
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/dirty_ratio`,
					action:"generic /proc/sys/vm/dirty_ratio"
				}},
				{ SOptionList:{
					title:"Drop Caches (Clear VFS Cache After Boot)",
					description:"This option will force rebuild of file system cache based on actual app usage rather than boot/startup processes. NOTE: This process can take from 1-2 minutes (Enable for better file system read/write performance).",
					default:0,
					action:"dropcaches $UKM/files/dropcaches_prof",
					values:{ 0:"Disabled", 1:"Enabled"
					}
				}},
				`if [ -f "/proc/sys/vm/extra_free_kbytes" ]; then
					$BB echo '{ SSeekBar:{
						title:"Extra Free Kilobytes",
						unit:" kB",
						step:50,
						min:0,
						max:20000,
						default:'\`$BB cat /proc/sys/vm/extra_free_kbytes\`',
						action:"generic /proc/sys/vm/extra_free_kbytes"
					}},'
				fi`
				{ SOptionList:{
					title:"Laptop Mode (Auto FS Writeback Delay Mode)",
					description:"This option will delay the writebacks of file system bits cached in RAM while screen is ON (Enable for better performance @ slight risk of possible data loss if crashed or sudden loss of power).",
					default:`$BB cat /proc/sys/vm/laptop_mode`,
					action:"generic /proc/sys/vm/laptop_mode",
					values:{ 0:"Disabled", 1:"Enabled"
					}
				}},
				{ SSeekBar:{
					title:"VFS Cache Pressure",
					description:"Controls the tendency of the kernel to reclaim the memory which is used for caching of directory and inode objects. Lower = prefer to retain dentry and inode cache, higher = prefer to reclaim dentry and inodes cache.",
					unit:"%",
					step:1,
					min:0,
					max:150,
					default:`$BB cat /proc/sys/vm/vfs_cache_pressure`,
					action:"generic /proc/sys/vm/vfs_cache_pressure"
				}},
		]
}
CTAG
